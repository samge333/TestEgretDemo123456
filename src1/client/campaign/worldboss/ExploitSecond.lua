-- ----------------------------------------------------------------------------------------------------
-- 说明：功勋奖励界面
-- 创建时间	2015-03-06
-- 作者：
-- 修改记录：
-- 最后修改人：
-------------------------------------------------------------------------------------------------------

ExploitSecond = class("ExploitSecondClass", Window)
    
function ExploitSecond:ctor()
    self.super:ctor()
    self.roots = {}
	self.actions = {}
	app.load("client.cells.campaign.exploit_second_reward_cell.lua")
	
	self.isDelay = true
	
    -- Initialize ExploitSecond page state machine.
    local function init_world_boss_terminal()
	
		local exploit_second_back_close_terminal = {
            _name = "exploit_second_back_close",
            _init = function (terminal) 
                
            end,
            _inited = false,
            _instance = self,
            _state = 0,
            _invoke = function(terminal, instance, params) 
				fwin:close(instance)
                return true
            end,
            _terminal = nil,
            _terminals = nil
        }
		
		local exploit_second_back_hide_terminal = {
            _name = "exploit_second_hide_close",
            _init = function (terminal) 
                
            end,
            _inited = false,
            _instance = self,
            _state = 0,
            _invoke = function(terminal, instance, params) 
				
				instance:onShow(false)
                return true
            end,
            _terminal = nil,
            _terminals = nil
        }
		
		state_machine.add(exploit_second_back_hide_terminal)
		state_machine.add(exploit_second_back_close_terminal)
        state_machine.init()
    end
    
    -- call func init hom state machine.
    init_world_boss_terminal()
end

function ExploitSecond:onShow(isShow)

	if isShow then
		self.rewardList:jumpToTop()
		self.actions[1]:gotoFrameAndPlay(0, self.actions[1]:getDuration(), false)
	end
	
	self:setVisible(isShow)
end



function ExploitSecond:onUpdateDraw()
	local root = self.roots[1]
	
	-- local rewardList = ccui.Helper:seekWidgetByName(root, "ListView_1")
	
	-- rewardList:removeAllItems()

	-- local kong = {}
	
	-- for i,v in ipairs(_ED.return_rebel_army_awardInfo.award_info) do
		-- if v.award_state == 1 then
			-- table.insert(kong , i)
		-- else
			-- local rewardCell = ExploiSecondRewardCell:createCell()
			-- local drawRewardState = rewardCell:init(v,rewardList)
			
			-- rewardList:addChild(rewardCell)
		-- end
	-- end
	local yilingqu = {}

	for i,v in ipairs(self.valid) do
		local item = v
		if __lua_project_id == __lua_project_gragon_tiger_gate or __lua_project_id == __lua_project_l_digital or __lua_project_id == __lua_project_l_pokemon or __lua_project_id == __lua_project_l_naruto  or __lua_project_id == __lua_project_red_alert then
			if item.award_state == 1 then
				table.insert(yilingqu,item)
			else
				local rewardCell = ExploiSecondRewardCell:createCell()
				local drawRewardState = rewardCell:init(item,self.rewardList)
				self.rewardList:addChild(rewardCell)
			end
		else
			local rewardCell = ExploiSecondRewardCell:createCell()
			local drawRewardState = rewardCell:init(item,self.rewardList)
			self.rewardList:addChild(rewardCell)
		end
	end
	
	if __lua_project_id == __lua_project_gragon_tiger_gate or __lua_project_id == __lua_project_l_digital or __lua_project_id == __lua_project_l_pokemon or __lua_project_id == __lua_project_l_naruto  or __lua_project_id == __lua_project_red_alert then
		for i,v in ipairs(yilingqu) do
			local item = v
			local rewardCell = ExploiSecondRewardCell:createCell()
			local drawRewardState = rewardCell:init(item,self.rewardList)
			self.rewardList:addChild(rewardCell)
		end
	end
	
	self.rewardList:requestRefreshView()
	
	fwin:addTouchEventListener(ccui.Helper:seekWidgetByName(root, "Button_1"), nil, 
		{
			terminal_name = "exploit_second_hide_close",
			terminal_state = 0,
			isPressedActionEnabled = true
		}, nil, 2)
	fwin:addTouchEventListener(ccui.Helper:seekWidgetByName(root, "Button_3"), nil, 
		{
			terminal_name = "exploit_second_hide_close",
			terminal_state = 0,
			isPressedActionEnabled = true
		}, nil, 0)
		
end

function ExploitSecond:onUpdate(dt)
	if self.isDelay == true then
		if os.clock() - self.delayTime >=  0.5  then
			self.isDelay = false
			self:onUpdateDraw()
		end
	end
end


function ExploitSecond:onEnterTransitionFinish()
	
	local csbExploitSecondFriend = csb.createNode("campaign/WorldBoss/worldBoss_friend.csb")
	self:addChild(csbExploitSecondFriend)
	local action = csb.createTimeline("campaign/WorldBoss/worldBoss_friend.csb") 
	table.insert(self.actions,action)
   	action:gotoFrameAndPlay(0, action:getDuration(), false)
    csbExploitSecondFriend:runAction(action)
	
	local root = csbExploitSecondFriend:getChildByName("root")
	table.insert(self.roots, root)
	local panelTitl	= ccui.Helper:seekWidgetByName(root, "Panel_jl")
	panelTitl:setVisible(true)
	
	self.delayTime = os.clock()
	
	self.rewardList = ccui.Helper:seekWidgetByName(root, "ListView_1")
	self.rewardList:removeAllItems()
	
	
	self.valid = {}
	local disabled = {}
	
	for i,v in ipairs(_ED.return_rebel_army_awardInfo.award_info) do
		if v.award_state == 1 then
			table.insert(disabled , v)
		else
			table.insert(self.valid  , v)
		end
	end
	
	for i,v in ipairs(disabled) do
		table.insert(self.valid  , v)
	end
	
	for i = 1, 5 do
		local rewardCell = ExploiSecondRewardCell:createCell()
		local drawRewardState = rewardCell:init(table.remove(self.valid,1,1), self.rewardList)
		self.rewardList:addChild(rewardCell)	
	end
	
end


function ExploitSecond:onExit()
	state_machine.remove("exploit_second_back_close")
	state_machine.remove("exploit_second_hide_close")
	
end